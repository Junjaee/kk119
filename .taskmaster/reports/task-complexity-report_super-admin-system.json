{
	"meta": {
		"generatedAt": "2025-09-26T01:47:10.702Z",
		"tasksAnalyzed": 10,
		"totalTasks": 10,
		"analysisCount": 10,
		"thresholdScore": 5,
		"projectName": "Taskmaster",
		"usedResearch": false
	},
	"complexityAnalysis": [
		{
			"taskId": 11,
			"taskTitle": "메인 대시보드에서 변호사 상담 섹션 제거",
			"complexityScore": 2,
			"recommendedSubtasks": 5,
			"expansionPrompt": "app/page.tsx의 메인 대시보드에서 변호사 상담 관련 UI 컴포넌트를 체계적으로 제거하기 위한 세부 작업으로 분해: 1) MessageSquare import 제거, 2) upcomingEvents 배열에서 변호사 상담 이벤트 삭제, 3) 3-column 그리드를 2-column으로 수정, 4) 변호사 상담 Card 컴포넌트 완전 제거, 5) 반응형 레이아웃 검증 및 최종 정리",
			"reasoning": "단일 파일(app/page.tsx) 내의 UI 요소 제거 작업으로 복잡성이 낮음. 이미 5개 서브태스크가 정의되어 있고 대부분 완료 상태. import 제거, 배열 수정, 레이아웃 변경 등 기계적 작업 위주"
		},
		{
			"taskId": 12,
			"taskTitle": "사이드바 네비게이션에서 변호사 상담 메뉴 제거",
			"complexityScore": 3,
			"recommendedSubtasks": 4,
			"expansionPrompt": "components/layout/sidebar.tsx의 menuItems 객체에서 모든 역할별 변호사 상담 메뉴를 체계적으로 제거: 1) teacher role의 '/consult' 메뉴 항목 삭제 (lines 70-75), 2) lawyer role의 '/lawyer/consults' 상담 관리 메뉴 제거 (lines 100-106), 3) admin/super_admin role의 변호사 관리 메뉴 제거 (lines 146-151, 198-204), 4) MessageSquare import 사용 확인 및 필요시 제거",
			"reasoning": "단일 파일의 구조화된 객체에서 여러 역할별 메뉴 항목을 제거하는 작업. 4개 역할에 걸쳐 메뉴 항목을 찾아 삭제해야 하므로 중간 복잡도. 기존 코드 분석 결과 정확한 라인 번호와 구조가 파악됨"
		},
		{
			"taskId": 13,
			"taskTitle": "변호사 상담 관련 페이지 및 디렉토리 완전 삭제",
			"complexityScore": 2,
			"recommendedSubtasks": 3,
			"expansionPrompt": "변호사 상담 관련 디렉토리와 페이지를 안전하게 삭제: 1) app/consult/, app/lawyer/, app/lawyer-consult/ 디렉토리 존재 확인 및 삭제, 2) 삭제 전 다른 컴포넌트에서의 참조 검색 (import문, Link 태그 등), 3) 참조하는 코드가 있다면 함께 정리하고 빌드 검증",
			"reasoning": "파일 시스템 작업으로 복잡성은 낮지만 의존성 확인이 중요. glob 결과로 해당 디렉토리들이 존재함을 확인. 삭제 전 참조 검색과 정리가 필요하여 3개 서브태스크 적정"
		},
		{
			"taskId": 14,
			"taskTitle": "미들웨어에서 변호사 상담 경로 제거",
			"complexityScore": 4,
			"recommendedSubtasks": 4,
			"expansionPrompt": "middleware.ts의 라우팅 및 권한 제어 로직에서 변호사 상담 관련 경로를 안전하게 제거: 1) rolePaths.lawyer 배열에서 '/consult' 제거 (line 36), 2) protectedPaths 배열에서 '/consult' 제거 (line 55), 3) lawyer role 사용자 리다이렉트 경로를 '/lawyer'에서 '/reports'로 변경 (line 148), 4) 변경 후 권한 제어 로직 테스트 및 검증",
			"reasoning": "인증/인가 미들웨어 수정으로 중간-높은 복잡도. 기존 코드 분석 결과 정확한 위치 파악됨. 라우팅 로직과 권한 제어가 복잡하게 연결되어 있어 신중한 수정 필요"
		},
		{
			"taskId": 15,
			"taskTitle": "타입 정의에서 변호사 상담 전용 타입 정리",
			"complexityScore": 3,
			"recommendedSubtasks": 3,
			"expansionPrompt": "lib/types/index.ts에서 변호사 상담 관련 타입을 신고 시스템 통합에 맞게 정리: 1) 기존 Consult 인터페이스 분석 및 신고 시스템 통합용으로 필드 조정, 2) 'lawyer' UserRole은 통합 시스템에서 계속 사용하므로 유지, 3) 독립적인 변호사 상담 전용 타입이 있다면 제거하고 통합 시스템용 새 타입 추가",
			"reasoning": "기존 코드에서 Consult 인터페이스와 UserRole이 잘 정의되어 있음. 통합 시스템을 위한 기존 타입 유지와 새로운 요구사항 반영이 필요하여 중간 복잡도"
		},
		{
			"taskId": 16,
			"taskTitle": "신고 시스템 데이터베이스 스키마 확장",
			"complexityScore": 7,
			"recommendedSubtasks": 5,
			"expansionPrompt": "신고 시스템에 변호사 상담 기능을 통합하기 위한 데이터베이스 스키마 확장: 1) reports 테이블에 변호사 관련 필드 추가 (lawyer_id, lawyer_assigned_at, lawyer_consultation_started_at, lawyer_response_at, consultation_priority), 2) lawyer_consultations 테이블 새로 생성 (상담 내용, 권장 조치, 법적 근거, 추가 노트 등), 3) 외래키 제약조건과 인덱스 설정, 4) 기존 consultations 테이블 확인 및 데이터 마이그레이션 전략 수립, 5) 스키마 변경 스크립트 작성 및 테스트",
			"reasoning": "데이터베이스 스키마 변경은 높은 복잡도를 가짐. 기존 reports 테이블 구조 확인, 새 테이블 생성, 관계 설정, 마이그레이션 등 다단계 작업 필요. 데이터 무결성과 하위 호환성 고려 필요"
		},
		{
			"taskId": 17,
			"taskTitle": "신고 상태 확장 및 변호사 배정 API 개발",
			"complexityScore": 6,
			"recommendedSubtasks": 5,
			"expansionPrompt": "신고 처리 프로세스에 변호사 상담 단계 추가를 위한 백엔드 API 구현: 1) ReportStatus 타입에 변호사 상담 관련 상태 추가 ('lawyer_assigned', 'lawyer_consulting', 'lawyer_responded'), 2) 관리자용 변호사 배정 API (POST /api/reports/:id/assign-lawyer), 3) 변호사 상담 정보 조회 API (GET /api/reports/:id/consultation), 4) 변호사 상담 응답 업데이트 API (PUT /api/reports/:id/consultation), 5) 추가 정보 요청 API (POST /api/reports/:id/consultation/request-info)",
			"reasoning": "여러 API 엔드포인트 개발과 기존 신고 시스템과의 통합. 권한 제어, 데이터 검증, 알림 시스템 연동 등 복잡한 비즈니스 로직 필요. 이미 5개 서브태스크가 정의되어 있어 적절함"
		},
		{
			"taskId": 18,
			"taskTitle": "변호사 전용 API 및 대시보드 기능 개발",
			"complexityScore": 5,
			"recommendedSubtasks": 4,
			"expansionPrompt": "변호사가 배정된 신고를 효율적으로 관리할 수 있는 전용 API 및 인터페이스 구현: 1) 변호사별 배정된 신고 목록 조회 API (GET /api/lawyer/assigned-reports), 2) 변호사 상담 응답 작성/수정 API (POST/PUT /api/lawyer/consultations), 3) 상담 응답 템플릿 관리 API (GET /api/lawyer/templates), 4) 변호사 대시보드 통계 API (처리 중인 케이스, 완료율 등)",
			"reasoning": "변호사 역할 전용 API 개발. JWT 인증, 권한 확인, 데이터 필터링 등 보안 요소와 비즈니스 로직 구현 필요. 중간-높은 복잡도"
		},
		{
			"taskId": 19,
			"taskTitle": "신고 상세 페이지에 변호사 상담 섹션 통합",
			"complexityScore": 6,
			"recommendedSubtasks": 5,
			"expansionPrompt": "신고 상세 페이지(reports/[id]/page.tsx)에 변호사 상담 기능을 자연스럽게 통합: 1) 변호사 배정 정보 및 프로필 표시 컴포넌트 개발, 2) 상담 진행 상황 표시 UI (배정됨/상담중/응답완료 단계별), 3) 변호사 응답 내용 표시 영역 (상담 내용, 권장 조치, 법적 근거), 4) 신고자의 추가 질문 및 자료 제출 인터페이스, 5) 상담 히스토리 타임라인 컴포넌트 구현",
			"reasoning": "기존 신고 상세 페이지 분석 결과 복잡한 UI 구조를 가짐. 새로운 변호사 상담 섹션을 기존 디자인과 일관성 있게 통합하려면 상당한 UI/UX 작업 필요. 상태 관리와 실시간 업데이트도 고려"
		},
		{
			"taskId": 20,
			"taskTitle": "관리자 인터페이스에 변호사 배정 기능 추가",
			"complexurityScore": 5,
			"recommendedSubtasks": 5,
			"expansionPrompt": "관리자가 신고 검토 후 효율적으로 변호사를 배정할 수 있는 관리 인터페이스 구현: 1) 신고 관리 페이지에서 변호사 배정 필요한 신고 필터링 기능, 2) 변호사 목록 및 전문 분야별 선택 UI 구현, 3) 변호사별 현재 업무량 및 배정 이력 표시, 4) 배정 완료 후 자동 알림 발송 시스템 구현, 5) 변호사 상담 진행 상황 모니터링 대시보드",
			"reasoning": "관리자 워크플로우와 UI 개발. 필터링, 선택, 모니터링 등 복잡한 관리 기능과 알림 시스템 연동 필요. 사용성과 효율성을 고려한 인터페이스 설계 중요"
		}
	]
}